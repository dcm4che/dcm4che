usage=jpg2dcm [options] <jpeg-file>|<mpeg2-file> <dicom-file>
try=Try `jpg2dcm --help' for more information.
description=\n\
Encapsulate JPEG image or MPEG2 video (with file extensions jpeg, jpg, jpe; mpeg, mpg, mpe) into DICOM files. \
DICOM attributes can be specified via command line (using -m option) or a XML file (using -f option) or can also be \
generated using sample metadata files by specifying (either --sc option or --xc option). If all the options are specified, \
system will generate metadata first from sample metadata file then from file specified by user and lastly add the attributes \
specified individually on command line. The Type 1 and Type 2 attributes, if missing, will be generated by the system.\n\-\n\
Options:
example=-\n\
Example 1: jpg2dcm -f metadata.xml image.jpg image.dcm\n\
=> Encapulate JPEG Image verbatim with DICOM attributes specified in metadata.xml into DICOM Image Object.\n\-\n\
Example 2: jpg2dcm --no-app -m PatientName=Simson^Homer -m PatientSex=M -- homer.jpg image.dcm\n\
=> Encapulate JPEG Image without application segments with specified DICOM attributes into DICOM Image Object.\n\-\n\
Example 3: jpg2dcm video.mpg video.dcm\n\
=> Encapulate MPEG2 Video into DICOM Video Object.\n\ 
metadata=specify included DICOM Attribute. attr can be specified by keyword or tag value (in hex), e.g. PatientName or\
 00100010. Attributes in nested Datasets can be specified by including the keyword/tag value of the sequence attribute,\
 e.g. 00400275/00400009 for Scheduled Procedure Step ID in the Request Attributes Sequence. Overrides DICOM attributes\
 specified by -f <xml-file>
file=specify included DICOM attributes by XML presentation in <xml-file>
no-app=remove application segments APPn from encapsulated JPEG stream; encapsulate JPEG stream verbatim by default.
sc=generate sample metadata for Secondary Capture Image from etc/jpg2dcm/secondaryCaptureImageMetadata.xml file.
xc=generate sample metadata for VL Photographic Image from etc/jpg2dcm/vlPhotographicImageMetadata.xml file.
missing=missing file operand
too-many=too many arguments
invalid-file-ext=unrecognized file extension of {0} 
file-too-large={0} too large
failed-to-parse=failed to detect {0} header in {1}
converted={0} -> {1}
