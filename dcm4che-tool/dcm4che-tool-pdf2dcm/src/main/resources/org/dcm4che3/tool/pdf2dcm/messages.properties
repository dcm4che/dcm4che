usage=pdf2dcm [options] <pdf-file> <dicom-file>
try=Try `pdf2dcm --help' for more information.
description=\n\
Encapsulate PDF (file extension pdf) or CDA (file extension xml) into DICOM file. \
DICOM attributes can be specified via command line (using -m option) or a XML file (using -f option) or can also be \
generated using sample metadata file by specifying (either --pdf or --cda option). If all the options are specified, \
system will generate metadata first from sample metadata file then from file specified by user and lastly add the attributes \
specified individually on command line. The Type 1 and Type 2 attributes, if missing, will be generated by the system.\n\-\n\
Options:
example=-\n\
Example 1: pdf2dcm -f metadata.xml file.pdf object.dcm\n\
=> Encapulate PDF document with DICOM attributes specified in metadata.xml into DICOM Object.\n\-\n\
Example 2: pdf2dcm --cda -f metadata.xml cda.xml object.dcm\n\
=> Encapulate PDF document first generating metadata from etc/pdf2dcm/encapsulatedPDFMetadata.xml and then adding \
DICOM attributes specified in metadata.xml into DICOM Object.\n\-\n\
Example 3: pdf2dcm --pdf -m PatientName=Simson^Homer -m PatientSex=M -- file.pdf object.dcm\n\
=> Encapulate PDF document first generating metadata from etc/pdf2dcm/encapsulatedPDFMetadata.xml and then adding given \
PatientName and PatientSex into DICOM Image Object.\n\ 
metadata=specify included DICOM Attribute. attr can be specified by keyword or tag value (in hex), e.g. PatientName or\
 00100010. Attributes in nested Datasets can be specified by including the keyword/tag value of the sequence attribute,\
 e.g. 00400275/00400009 for Scheduled Procedure Step ID in the Request Attributes Sequence. Overrides DICOM attributes\
 specified by -f <xml-file>
file=specify included DICOM attributes by XML presentation in <xml-file>
cda=Generate sample metadata for Encapsulated CDA from etc/pdf2dcm/encapsulatedCDAMetadata.xml file.
pdf=Generate sample metadata for Encapsulated PDF from etc/pdf2dcm/encapsulatedPDFMetadata.xml file.
missing=missing file operand
too-many=too many arguments
file-too-large={0} too large
converted={0} -> {1}
