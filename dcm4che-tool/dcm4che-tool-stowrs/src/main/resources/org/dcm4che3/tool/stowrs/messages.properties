usage=stowrs [options]  -u <stowURL> [<fileToBeStored>..]
try=Try `stowrs --help' for more information.
description=\n\
For DICOM files : Send multiple dicom files to STOW-RS receiver at a time. \
For metadata+bulkdata : DICOM attributes can be specified via command line (using -m option) or a XML file (using -f option) or can also be \
generated using sample metadata files by specifying (either --sc option or --xc option for images or --pdf option or \
--cda option). If all the options are specified, system will generate metadata first from sample metadata file then from \
file specified by user and lastly add the attributes specified individually on command line. The Type 1 and Type 2 attributes, \
if missing, will be generated by the system. Currently, if content type (-t option is specified as json), then tool also \
supports to send multiple bulkdata files (limited to file types of same type) at a time in one request to STOW-RS receiver. \
i.e for eg. one can send multiple pdfs in one request, but can not send combination of files like pdfs and images in one request. \
Supported extension types for bulkdata are pdf, xml (for CDA files), jpg, jpeg, mpg, mpeg, mpg2. \n\
File names should not contain spaces. \n\-\n\
Options:
example=-\n\
Example: stowrs -m PatientName=John^Doe --url http://localhost/stow/studies img.jpeg \n\
=> Send stow request to stowRS Receiver with the attribute given and img.jpeg bulkData.\n\-\n\
Example: stowrs --url http://localhost/stow/studies[/{StudyInstanceUID}] object1.dcm object2.dcm \n\
=> Send stow request to stowRS Receiver with the given dicom files.\n\-\n\
Example: stowrs -t json --pdf -m StudyInstanceUID=1.2.3.4.5.6.7.8.9.10 --url http://localhost/stow/studies file1.pdf file2.pdf file3.pdf \n\
=> Send stow request to stowRS Receiver first generating metadata from etc/stowrs/encapsulatedPDFMetadata.xml and then adding \n\
given StudyInstanceUID for the 3 pdf files. \n\ 
accept=Specify the value for Accept header : xml or json. \
The value of Accept header will then be sent in request header as application/dicom+xml or application/dicom+json. \
Note that for DICOM objects application/dicom+xml will always be used by default. \
If this flag is absent, for bulkdata type of objects the value specified in -t option will be used to determine application/dicom+xml or application/dicom+json. \
If -t option is absent as well then application/dicom+xml will be used by default. 
file=Specify the file containing the metadata (in XML format).
metadata=Specify metadata attributes. attr can be specified by keyword or tag value \
(in hex), e.g. PatientName or 00100010. Attributes in nested Datasets can be \
specified by including the keyword/tag value of the sequence attribute, \
e.g. 00400275/00400009 for Scheduled Procedure Step ID in the Request.
no-appn=Application segments APPn are to be excluded from JPEG stream. If absent JPEG stream verbatim encapsulated by default.
pixel-header=Metadata information is to be extracted from header of pixel data for jpegs and mpegs. \
If absent, pixel header will not be read; ensure that pixel data related attributes should be present either in \
metadata file or from command line to ensure seeing the images/videos correctly.
cda=Generate sample metadata for Encapsulated CDA from etc/stowrs/encapsulatedCDAMetadata.xml file.
pdf=Generate sample metadata for Encapsulated PDF from etc/stowrs/encapsulatedPDFMetadata.xml file.
sc=Generate sample metadata for Secondary Capture Image from etc/stowrs/secondaryCaptureImageMetadata.xml file.
xc=Generate sample metadata for VL Photographic Image from etc/stowrs/vlPhotographicImageMetadata.xml file.
type=Specify the value for Content-type header : xml or json. \
The value of Content-type will then be sent in request header as application/dicom+xml or application/dicom+json. \
If this flag is absent, for bulkdata type of objects application/dicom+xml will be used by default. \
Note that for DICOM objects, tool will always send Content-type as application/dicom.
url=Specify the request URL.
user=Specify the user name and password to use for server authentication.