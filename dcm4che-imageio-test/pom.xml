<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ ***** BEGIN LICENSE BLOCK *****
  ~ Version: MPL 1.1/GPL 2.0/LGPL 2.1
  ~
  ~ The contents of this file are subject to the Mozilla Public License Version
  ~ 1.1 (the "License"); you may not use this file except in compliance with
  ~ the License. You may obtain a copy of the License at
  ~ http://www.mozilla.org/MPL/
  ~
  ~ Software distributed under the License is distributed on an "AS IS" basis,
  ~ WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  ~ for the specific language governing rights and limitations under the
  ~ License.
  ~
  ~ The Original Code is part of dcm4che, an implementation of DICOM(TM) in
  ~ Java(TM), hosted at https://github.com/dcm4che.
  ~
  ~ The Initial Developer of the Original Code is
  ~ J4Care.
  ~ Portions created by the Initial Developer are Copyright (C) 2015-2018
  ~ the Initial Developer. All Rights Reserved.
  ~
  ~ Contributor(s):
  ~ See @authors listed below
  ~
  ~ Alternatively, the contents of this file may be used under the terms of
  ~ either the GNU General Public License Version 2 or later (the "GPL"), or
  ~ the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
  ~ in which case the provisions of the GPL or the LGPL are applicable instead
  ~ of those above. If you wish to allow use of your version of this file only
  ~ under the terms of either the GPL or the LGPL, and not to allow others to
  ~ use your version of this file under the terms of the MPL, indicate your
  ~ decision by deleting the provisions above and replace them with the notice
  ~ and other provisions required by the GPL or the LGPL. If you do not delete
  ~ the provisions above, a recipient may use your version of this file under
  ~ the terms of any one of the MPL, the GPL or the LGPL.
  ~
  ~ ***** END LICENSE BLOCK *****
  ~
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>dcm4che-parent</artifactId>
    <groupId>org.dcm4che</groupId>
    <version>5.34.2</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>dcm4che-imageio-test</artifactId>

  <properties>
    <!-- Tests require the OpenCV native library and can only be run on Linux, Windows and macOS-->
    <argLine>-Djava.library.path=${project.build.directory}/lib/${os-name}-${cpu-name} -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.desktop/javax.imageio.stream=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED</argLine>
  </properties>
  <profiles>
    <profile>
      <id>linux-x86_64</id>
      <activation>
        <os>
          <name>linux</name>
          <arch>amd64</arch>
        </os>
      </activation>
      <properties>
        <os-name>linux</os-name>
        <cpu-name>x86-64</cpu-name>
        <lib-file-name>libopencv_java</lib-file-name>
        <lib-file-ext>so</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>linux-aarch64</id>
      <activation>
        <os>
          <name>linux</name>
          <arch>aarch64</arch>
        </os>
      </activation>
      <properties>
        <os-name>linux</os-name>
        <cpu-name>aarch64</cpu-name>
        <lib-file-name>libopencv_java</lib-file-name>
        <lib-file-ext>so</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>linux-arm32</id>
      <activation>
        <os>
          <name>linux</name>
          <arch>arm</arch>
        </os>
      </activation>
      <properties>
        <os-name>linux</os-name>
        <cpu-name>armv7a</cpu-name>
        <lib-file-name>libopencv_java</lib-file-name>
        <lib-file-ext>so</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>macosx-x86_64</id>
      <activation>
        <os>
          <name>mac os x</name>
          <arch>x86_64</arch>
        </os>
      </activation>
      <properties>
        <os-name>macosx</os-name>
        <cpu-name>x86-64</cpu-name>
        <lib-file-name>libopencv_java</lib-file-name>
        <lib-file-ext>dylib</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>macosx-aarch64</id>
      <activation>
        <os>
          <name>mac os x</name>
          <arch>aarch64</arch>
        </os>
      </activation>
      <properties>
        <os-name>macosx</os-name>
        <cpu-name>aarch64</cpu-name>
        <lib-file-name>libopencv_java</lib-file-name>
        <lib-file-ext>dylib</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>windows-x86_64</id>
      <activation>
        <os>
          <family>windows</family>
          <arch>amd64</arch>
        </os>
      </activation>
      <properties>
        <os-name>windows</os-name>
        <cpu-name>x86-64</cpu-name>
        <lib-file-name>opencv_java</lib-file-name>
        <lib-file-ext>dll</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>windows-x86</id>
      <activation>
        <os>
          <family>windows</family>
          <arch>x86</arch>
        </os>
      </activation>
      <properties>
        <os-name>windows</os-name>
        <cpu-name>x86</cpu-name>
        <lib-file-name>opencv_java</lib-file-name>
        <lib-file-ext>dll</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>test-coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>jacoco-report-aggregate</id>
                <goals>
                  <goal>report-aggregate</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <skipIfEmpty>true</skipIfEmpty>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-remote-resources-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>process</goal>
            </goals>
            <configuration>
              <resourceBundles>
                <resourceBundle>org.dcm4che:dcm4che-test-data:${project.version}</resourceBundle>
              </resourceBundles>
              <attachToMain>false</attachToMain>
              <attachToTest>false</attachToTest>
              <outputDirectory>${project.build.directory}/test-data</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.weasis.thirdparty.org.opencv</groupId>
                  <artifactId>${lib-file-name}</artifactId>
                  <type>${lib-file-ext}</type>
                  <classifier>${os-name}-${cpu-name}</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/lib/${os-name}-${cpu-name}</outputDirectory>
                  <destFileName>${lib-file-name}.${lib-file-ext}</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.dcm4che</groupId>
      <artifactId>dcm4che-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.dcm4che</groupId>
      <artifactId>dcm4che-image</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.dcm4che</groupId>
      <artifactId>dcm4che-test-data</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.dcm4che</groupId>
      <artifactId>dcm4che-imageio</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.dcm4che</groupId>
      <artifactId>dcm4che-imageio-opencv</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.dcm4che</groupId>
      <artifactId>dcm4che-imageio-rle</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.media</groupId>
      <artifactId>jai_imageio</artifactId>
      <version>1.2-pre-dr-b04</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
      <version>2.8.0</version>
    </dependency>
  </dependencies>
</project>
